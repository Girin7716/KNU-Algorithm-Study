#include <iostream>
#define MAX 200
using namespace std;

int N,K;
long long dp[MAX+1][MAX+1]; // n까지 k개의 수

int main(){
    cin >> N >> K;

    for(int i = 0; i<=N; i++)
        dp[i][1] = 1; // 1 1이나 2 1은 무조건 1개

    for(int k = 2; k <= K; k++){
        for(int n = 0; n <= N; n++){
            for(int j = 0; j <= n; j++)
                dp[n][k] += dp[j][k-1];
            dp[n][k] %= 1000000000;
        }
    }
    cout << (dp[N][K] % 1000000000) << endl;
    return 0;
}

// 20 2
// 0 20까지 2개의 수를 사용하여 20이 되어야함

// N K
// 0 N 까지 K개의 수를 사용하여 N이 되어야함

// 0 0
// 0 0 까지 0개의 수를 사용하여 0이 되어야함
// 0

// 1 1
// 0 1 까지 1개의 수를 사용하여 1이 되어야함
// 1

// 2 1
// 1

// 3 1
// 1

// 20 1
// 1

// 1 2
// 0 1 까지 2개의 수
// (1 + 0) (0 + 1) 2개


// 0 0
// 0

// 1 0
// 0

// N 0
// 0

// 0 1
// 1

// 1 1
// 1


// 2 1
// 1

// 2 2
// 0 2 까지 2개의 수
// 3 (2 + 0) (1+1) (0 + 2)
// 2일때 0 1
// 1일때 1 1
// 0일때 2 1

// 3 2
// 0 3 까지 2개의 수
// (3+0) (2+1) (1+2) (0+3)
// 4

// 1 3
// 0 1까지 3개의 수
// (1 + 0 + 0) (0 + 1 + 0) (0 + 0 + 1) 3개

// 2 3
// 0 2까지 3개의 수
// (2 + 0 + 0) (1 + 1 + 0) (1 + 0 + 1) (0 + 2 + 0) (0 + 1 + 1) (0 + 0 + 2)
// 2니까 0 2를 더하고
// 1이니까 1 2를 더하고
// 0이니까 2 2를 더하고
// 1 + 2 + 3 = 6

// 3 3
// 0 3까지 3개의 수
// 3이니까 0 2를 더하고
// 2이니까 1 2를 더하고
// 1이니까 2 2를 더하고
// 0이니까 3 2를 더하고
// 1 + 2 + 3 + 4 = 10

// 3 4
// 0 3까지 4개의 수
// 3 0 3
// 2 1 3
// 1 2 3
// 0 3 3


//dp[N][K]
/*
while(n > 0){
    dp[N][K] += dp[n][k-1]
    n--;
}
*/